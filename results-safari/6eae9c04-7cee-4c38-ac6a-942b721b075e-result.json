{"name": "Check main navigation", "status": "broken", "statusDetails": {"message": "ValueError: response body:\n{\"message\":\"API rate limit exceeded for 13.105.117.173. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\n\nrequest url:\nhttps://api.github.com/repos/mozilla/geckodriver/releases/latest\nresponse headers:\n{'Date': 'Thu, 31 Oct 2024 14:02:37 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1730385807', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '280', 'X-GitHub-Request-Id': '9460:7D8D8:4967D0:49F881:67238DFD'}", "trace": "self = <Tests.test_HomePage.TestHomePage object at 0x1025f12d0>\nrequest = <SubRequest 'driver' for <Function test_1[firefox]>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def driver(self, request):\n        browser = request.param\n    \n        project_folder = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n    \n        is_ci = os.getenv('CI') == 'true'\n        if is_ci:\n            if browser == \"edge\":\n                # Set up Edge options\n                options = EdgeOptions()\n                options.add_argument(\"--headless\")\n                options.add_argument(\"--disable-gpu\")\n                options.add_argument(\"--no-sandbox\")\n                options.add_argument(\"--disable-dev-shm-usage\")\n                options.add_argument(\"--disable-extensions\")\n                options.add_argument(\"--disable-infobars\")\n                serv = EdgeService(EdgeChromiumDriverManager().install())\n                driver = webdriver.Edge(service=serv, options=options)\n            elif browser == \"chrome\":\n                options = ChromeOptions()\n                options.add_argument(\"--headless\")\n                options.add_argument(\"--disable-gpu\")\n                options.add_argument(\"--no-sandbox\")\n                options.add_argument(\"--disable-dev-shm-usage\")\n                options.add_argument(\"--disable-extensions\")\n                options.add_argument(\"--disable-infobars\")\n                '''chrome_driver_path = \"/usr/local/share/chrome_driver/chromedriver\"\n                serv = ChromeService(executable_path=chrome_driver_path)\n                driver = webdriver.Chrome(service=serv, options=options)'''\n                chrome_driver_path = \"/usr/bin/chromedriver\"\n                serv = ChromeService(chrome_driver_path)\n                driver = webdriver.Chrome(service=serv, options=options)\n            elif browser == \"firefox\":\n                options = FirefoxOptions()\n                options.headless = True\n>               driver = webdriver.Firefox(service=FirefoxService(GeckoDriverManager().install()), options=options)\n\nCommon/BaseClass.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/webdriver_manager/firefox.py:39: in install\n    driver_path = self._get_driver_binary_path(self.driver)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/webdriver_manager/core/manager.py:40: in _get_driver_binary_path\n    file = self._download_manager.download_file(driver.get_driver_download_url(os_type))\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/webdriver_manager/drivers/firefox.py:37: in get_driver_download_url\n    driver_version_to_download = self.get_driver_version_to_download()\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/webdriver_manager/core/driver.py:48: in get_driver_version_to_download\n    return self.get_latest_release_version()\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/webdriver_manager/drivers/firefox.py:29: in get_latest_release_version\n    resp = self._http_client.get(\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/webdriver_manager/core/http.py:36: in get\n    self.validate_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [403]>\n\n    @staticmethod\n    def validate_response(resp: requests.Response):\n        status_code = resp.status_code\n        if status_code == 404:\n            raise ValueError(f\"There is no such driver by url {resp.url}\")\n        elif status_code == 401:\n            raise ValueError(f\"API Rate limit exceeded. You have to add GH_TOKEN!!!\")\n        elif resp.status_code != 200:\n>           raise ValueError(\n                f\"response body:\\n{resp.text}\\n\"\n                f\"request url:\\n{resp.request.url}\\n\"\n                f\"response headers:\\n{dict(resp.headers)}\\n\"\n            )\nE           ValueError: response body:\nE           {\"message\":\"API rate limit exceeded for 13.105.117.173. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\nE           \nE           request url:\nE           https://api.github.com/repos/mozilla/geckodriver/releases/latest\nE           response headers:\nE           {'Date': 'Thu, 31 Oct 2024 14:02:37 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1730385807', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '280', 'X-GitHub-Request-Id': '9460:7D8D8:4967D0:49F881:67238DFD'}\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/webdriver_manager/core/http.py:19: ValueError"}, "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1730383357181, "stop": 1730383357181, "uuid": "5d6e0f6a-e220-4a99-8846-f3bd9c659761", "historyId": "8868b3edf82232975dc5134917242b66", "testCaseId": "3c572a30072d130910de3c376f6098d0", "fullName": "Tests.test_HomePage.TestHomePage#test_2", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Home page"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_HomePage"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "Mac-1730382972322.local"}, {"name": "thread", "value": "1759-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_HomePage"}]}
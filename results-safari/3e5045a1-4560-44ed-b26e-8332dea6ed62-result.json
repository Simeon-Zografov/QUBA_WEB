{"name": "User is navigated to the Sponsors page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: ; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception", "trace": "self = <Tests.test_SponsorsPage.TestSponsorsPage object at 0x10699fb50>\ndriver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"4E2237F0-9D37-4206-81BC-AE6C0A752AEA\")>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def get_sponsors_page_content(self, driver):\n        admin_obj = Admin(driver)\n        admin_obj.switch_to_admin()\n>       TestSponsorsPage.sponsors_page_content = admin_obj.get_sponsors_page_content()\n\nTests/test_SponsorsPage.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/Admin.py:358: in get_sponsors_page_content\n    \"logos\": self.get_sponsors_logos_filenames(),\nPages/Admin.py:320: in get_sponsors_logos_filenames\n    filenames.append(self.driver.find_element(*self.sponsors_logo_filename).text)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1069c1a10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: ; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "driver", "value": "'safari'"}], "start": 1732000613166, "stop": 1732000613166, "uuid": "56e1d85c-91e2-401a-bda7-aae1ad5bf252", "historyId": "b420e84dd2c24db4a6c6e2ddb8d4e36d", "testCaseId": "68df1552708851debec2e788ce6b54cc", "fullName": "Tests.test_SponsorsPage.TestSponsorsPage#test_1", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Sponsors page"}, {"name": "tag", "value": "dependency(name='test_1')"}, {"name": "tag", "value": "flaky(reruns=3, reruns_delay=1)"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_SponsorsPage"}, {"name": "subSuite", "value": "TestSponsorsPage"}, {"name": "host", "value": "Mac-1731999084512.local"}, {"name": "thread", "value": "3293-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_SponsorsPage"}], "links": [{"type": "tms", "url": "https://hedgehoglabqa.testrail.io/index.php?/cases/view/58557", "name": "C58557"}, {"type": "issue", "url": "https://hedgehog-lab.atlassian.net/browse/QP-356", "name": "Epic QP-356"}, {"type": "issue", "url": "https://hedgehog-lab.atlassian.net/browse/QP-270", "name": "Story QP-270"}]}
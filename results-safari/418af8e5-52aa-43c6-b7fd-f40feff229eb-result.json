{"name": "Unsuccessfully login with email:  and password: Test#1234", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Tests.test_Login.TestLogin object at 0x103df3650>\ndriver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"09F642F3-DF69-4A86-A215-E24BA085E9FD\")>\nemail = '', password = 'Test#1234', error = 'Please enter your email'\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Login')\n    @allure.title(\"Unsuccessfully login with email: {email} and password: {password}\")\n    @pytest.mark.parametrize('email,password,error', [\n        (BaseClass.email[:-1], BaseClass.password, \"There was a problem logging you in. Please try again.\"),\n        (BaseClass.email, BaseClass.password[:-1], \"There was a problem logging you in. Please try again.\"),\n        (BaseClass.email.replace(\"@\", \"\"), BaseClass.password, \"Please enter a valid email\"),\n        (\"\", BaseClass.password, \"Please enter your email\"),\n        (BaseClass.email, \"\", \"Please enter your password\")\n    ])\n    def test_2(self, driver, email, password, error):\n        login_obj = Login(driver)\n        driver.refresh()\n        login_obj.set_email_field(email)\n        login_obj.set_password_field(password)\n        with check, allure.step(\"Check for error\"):\n            if \"Please enter\" in error:\n>               assert login_obj.is_filed_error_message_visible()\n\nTests/test_Login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/LoginPage.py:41: in is_filed_error_message_visible\n    message = wait.until(EC.visibility_of_element_located(self.field_error_message))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"09F642F3-DF69-4A86-A215-E24BA085E9FD\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x1059d1da0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Check for error", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/runner/work/QUBA_WEB/QUBA_WEB/Tests/test_Login.py\", line 43, in test_2\n    assert login_obj.is_filed_error_message_visible()\n  File \"/Users/runner/work/QUBA_WEB/QUBA_WEB/Pages/LoginPage.py\", line 41, in is_filed_error_message_visible\n    message = wait.until(EC.visibility_of_element_located(self.field_error_message))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1730384166090, "stop": 1730384197960}], "parameters": [{"name": "email", "value": "''"}, {"name": "password", "value": "'Test#1234'"}, {"name": "error", "value": "'Please enter your email'"}, {"name": "driver", "value": "'safari'"}], "start": 1730384165627, "stop": 1730384197986, "uuid": "ea78ee5f-2c9d-4d77-9dbc-2363a0195d5f", "historyId": "46cfc62142b6ef289e61356a03d78588", "testCaseId": "c2811b1721d8231bbb0fb40778ae099c", "fullName": "Tests.test_Login.TestLogin#test_2", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Login"}, {"name": "tag", "value": "flaky(reruns=5, reruns_delay=0.5, rerun_except='assert')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Mac-1730383937177.local"}, {"name": "thread", "value": "1239-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_Login"}]}
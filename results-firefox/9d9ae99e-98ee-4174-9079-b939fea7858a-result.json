{"name": "Unsuccessfully login with email: simeon.hhl.qa@gmail.com and password: Test#123", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"btn btn-md btn-primary disabled app-button\" type=\"submit\"> is not clickable at point (189,493) because another element <form class=\"login-form\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:207:31", "trace": "self = <Tests.test_Login.TestLogin object at 0x7fa1cde0f790>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"a5426876-fd15-4636-8c75-4ae97a6858be\")>\nemail = 'simeon.hhl.qa@gmail.com', password = 'Test#123'\nerror = 'There was a problem logging you in. Please try again.'\ntest_case = 'C58785'\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Login')\n    @allure.title(\"Unsuccessfully login with email: {email} and password: {password}\")\n    @allure.issue(\"QP-382\", \"Story QP-382\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58783\", \"C58783\")\n    @allure.testcase(\"58784\", \"C58784\")\n    @allure.testcase(\"58785\", \"C58785\")\n    @allure.testcase(\"58785\", \"C58786\")\n    @pytest.mark.dependency(depends=[\"test_1\"])\n    @pytest.mark.parametrize('email,password,error,test_case', [\n        (EMAIL[:-1], PASSWORD, \"There was a problem logging you in. Please try again.\", \"C58784\"),\n        (EMAIL, PASSWORD[:-1], \"There was a problem logging you in. Please try again.\", \"C58785\"),\n        (EMAIL.replace(\"@\", \"\"), PASSWORD, \"Please enter a valid email\", \"C58783\"),\n        (\"\", PASSWORD, \"Please enter your email\", \"C58784\"),\n        (EMAIL, \"\", \"Please enter your password\", \"C58785\")\n    ])\n    def test_3(self, driver, email, password, error, test_case):\n        current_browser = self.current_browser\n        login_obj = Login(driver)\n        driver.refresh()\n        login_obj.set_email_field(email, current_browser)\n        login_obj.set_password_field(password, current_browser)\n        with check, allure.step(f\"{test_case}: Check for error\"):\n            if \"Please enter\" in error:\n                assert login_obj.is_filed_error_message_visible()\n            else:\n>               login_obj.click_login_button()\n\nTests/test_Login.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/LoginPage.py:31: in click_login_button\n    self.driver.find_element(*self.login_button).click()\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa1cf0971d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <button class=\\\\\"btn btn-md...ys.mjs:327:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:207:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"btn btn-md btn-primary disabled app-button\" type=\"submit\"> is not clickable at point (189,493) because another element <form class=\"login-form\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:207:31\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "C58785: Check for error", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"btn btn-md btn-primary disabled app-button\" type=\"submit\"> is not clickable at point (189,493) because another element <form class=\"login-form\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:207:31\n\n", "trace": "  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Tests/test_Login.py\", line 82, in test_3\n    login_obj.click_login_button()\n  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Pages/LoginPage.py\", line 31, in click_login_button\n    self.driver.find_element(*self.login_button).click()\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1734076763242, "stop": 1734076763248}], "parameters": [{"name": "email", "value": "'simeon.hhl.qa@gmail.com'"}, {"name": "password", "value": "'Test#123'"}, {"name": "error", "value": "'There was a problem logging you in. Please try again.'"}, {"name": "test_case", "value": "'C58785'"}, {"name": "driver", "value": "'firefox'"}], "start": 1734076759828, "stop": 1734076763249, "uuid": "9d8681b2-f9a9-4924-9692-656a0afe9b25", "historyId": "766f4bf82e70fa005146cf203b702511", "testCaseId": "96b2e665285a8ec417094929a80fdfda", "fullName": "Tests.test_Login.TestLogin#test_3", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Login"}, {"name": "tag", "value": "dependency(depends=['test_1'])"}, {"name": "tag", "value": "flaky(reruns=3, reruns_delay=1)"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "fv-az1913-369"}, {"name": "thread", "value": "1941-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_Login"}], "links": [{"type": "tms", "url": "https://hedgehoglabqa.testrail.io/index.php?/cases/view/58785", "name": "C58786"}, {"type": "tms", "url": "https://hedgehoglabqa.testrail.io/index.php?/cases/view/58785", "name": "C58785"}, {"type": "tms", "url": "https://hedgehoglabqa.testrail.io/index.php?/cases/view/58784", "name": "C58784"}, {"type": "tms", "url": "https://hedgehoglabqa.testrail.io/index.php?/cases/view/58783", "name": "C58783"}, {"type": "issue", "url": "https://hedgehog-lab.atlassian.net/browse/QP-356", "name": "Epic QP-356"}, {"type": "issue", "url": "https://hedgehog-lab.atlassian.net/browse/QP-382", "name": "Story QP-382"}]}
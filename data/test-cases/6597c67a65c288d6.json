{"uid":"6597c67a65c288d6","name":"Save site button for non logged user","fullName":"Tests.test_Sites.TestSites#test_40","historyId":"0b0884c0e1bcb831ccc83374f498eee2","time":{"start":1732899409756,"stop":1732899419801,"duration":10045},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[.='Log out']\"}\n  (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x565110a5331a <unknown>\n#1 0x5651105696e0 <unknown>\n#2 0x5651105b83e6 <unknown>\n#3 0x5651105b8681 <unknown>\n#4 0x5651105fdb04 <unknown>\n#5 0x5651105dc48d <unknown>\n#6 0x5651105faed7 <unknown>\n#7 0x5651105dc203 <unknown>\n#8 0x5651105aacc0 <unknown>\n#9 0x5651105abc9e <unknown>\n#10 0x565110a20d0b <unknown>\n#11 0x565110a24c92 <unknown>\n#12 0x565110a0db3c <unknown>\n#13 0x565110a25807 <unknown>\n#14 0x5651109f30df <unknown>\n#15 0x565110a42578 <unknown>\n#16 0x565110a42740 <unknown>\n#17 0x565110a52196 <unknown>\n#18 0x7f81cfa94ac3 <unknown>","statusTrace":"self = <Tests.test_Sites.TestSites object at 0x7f3a092a16d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5355e49cd2c5e5f0e9f3588a862a9e7\")>\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Individual Sites')\n    @allure.title(\"Save site button for non logged user\")\n    @allure.issue(\"QP-283\", \"Story QP-283\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58744\", \"C58744\")\n    def test_40(self, driver):\n        sites_obj = Sites(driver)\n        main_nav_obj = MainNavigation(driver)\n>       main_nav_obj.click_logout_button()\n\nTests/test_Sites.py:942: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/MainNavigation.py:54: in click_logout_button\n    self.driver.find_element(*self.logout_button).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3a095c67d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x565110a42740 \\\\u003Cunknown>\\\\n#17 0x565110a52196 \\\\u003Cunknown>\\\\n#18 0x7f81cfa94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[.='Log out']\"}\nE         (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x565110a5331a <unknown>\nE       #1 0x5651105696e0 <unknown>\nE       #2 0x5651105b83e6 <unknown>\nE       #3 0x5651105b8681 <unknown>\nE       #4 0x5651105fdb04 <unknown>\nE       #5 0x5651105dc48d <unknown>\nE       #6 0x5651105faed7 <unknown>\nE       #7 0x5651105dc203 <unknown>\nE       #8 0x5651105aacc0 <unknown>\nE       #9 0x5651105abc9e <unknown>\nE       #10 0x565110a20d0b <unknown>\nE       #11 0x565110a24c92 <unknown>\nE       #12 0x565110a0db3c <unknown>\nE       #13 0x565110a25807 <unknown>\nE       #14 0x5651109f30df <unknown>\nE       #15 0x565110a42578 <unknown>\nE       #16 0x565110a42740 <unknown>\nE       #17 0x565110a52196 <unknown>\nE       #18 0x7f81cfa94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732898689517,"stop":1732898689595,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732898689595,"stop":1732898691159,"duration":1564},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"driver::0","time":{"start":1732899430912,"stop":1732899431005,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Individual Sites"},{"name":"severity","value":"normal"},{"name":"tag","value":"flaky(reruns=3, reruns_delay=1)"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_Sites"},{"name":"subSuite","value":"TestSites"},{"name":"host","value":"fv-az1206-239"},{"name":"thread","value":"1784-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_Sites"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'chrome'"}],"links":[{"name":"C58744","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58744","type":"tms"},{"name":"Epic QP-356","url":"https://hedgehog-lab.atlassian.net/browse/QP-356","type":"issue"},{"name":"Story QP-283","url":"https://hedgehog-lab.atlassian.net/browse/QP-283","type":"issue"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["flaky(reruns=3, reruns_delay=1)"]},"source":"6597c67a65c288d6.json","parameterValues":["'chrome'"]}
{"uid":"622d51f39d62f45f","name":"Successful message send","fullName":"Tests.test_ContactPage.TestContactPage#test_2","historyId":"c215c51156221bee009195390ca8046d","time":{"start":1730449656574,"stop":1730449666615,"duration":10041},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"name\"]\"}\n  (Session info: MicrosoftEdge=129.0.2792.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5581003081ae <unknown>\n#1 0x5580fffcb686 <unknown>\n#2 0x55810001b083 <unknown>\n#3 0x55810001b1a1 <unknown>\n#4 0x558100061c84 <unknown>\n#5 0x55810004029d <unknown>\n#6 0x55810005f72e <unknown>\n#7 0x558100040013 <unknown>\n#8 0x55810000e19d <unknown>\n#9 0x55810000ee8e <unknown>\n#10 0x5581002db161 <unknown>\n#11 0x5581002de3cd <unknown>\n#12 0x5581002dde4b <unknown>\n#13 0x5581002de835 <unknown>\n#14 0x5581002cc7c2 <unknown>\n#15 0x5581002debbd <unknown>\n#16 0x5581002b72b5 <unknown>\n#17 0x5581002f8738 <unknown>\n#18 0x5581002f894d <unknown>\n#19 0x558100306ff1 <unknown>\n#20 0x7fcbfa294ac3 <unknown>","statusTrace":"self = <Tests.test_ContactPage.TestContactPage object at 0x7f7c559b6590>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"3c8effbd07cb5547a3fbd134f09ae9d6\")>\n\n    @severity(severity_level.CRITICAL)\n    @allure.feature('Contact page')\n    @allure.title(\"Successful message send\")\n    def test_2(self, driver):\n        contact_obj = ContactPage(driver)\n        random_name = contact_obj.generate_random_name()\n        random_email = TestContactPage.current_browser + \"_\" + contact_obj.generate_random_email()\n        random_message = contact_obj.generate_random_message()\n>       contact_obj.set_name_field(random_name)\n\nTests/test_ContactPage.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/ContactPage.py:33: in set_name_field\n    self.driver.find_element(*self.name_input_field).send_keys(name)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7c55eb4450>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x5581002f894d \\\\u003Cunknown>\\\\n#19 0x558100306ff1 \\\\u003Cunknown>\\\\n#20 0x7fcbfa294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"name\"]\"}\nE         (Session info: MicrosoftEdge=129.0.2792.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5581003081ae <unknown>\nE       #1 0x5580fffcb686 <unknown>\nE       #2 0x55810001b083 <unknown>\nE       #3 0x55810001b1a1 <unknown>\nE       #4 0x558100061c84 <unknown>\nE       #5 0x55810004029d <unknown>\nE       #6 0x55810005f72e <unknown>\nE       #7 0x558100040013 <unknown>\nE       #8 0x55810000e19d <unknown>\nE       #9 0x55810000ee8e <unknown>\nE       #10 0x5581002db161 <unknown>\nE       #11 0x5581002de3cd <unknown>\nE       #12 0x5581002dde4b <unknown>\nE       #13 0x5581002de835 <unknown>\nE       #14 0x5581002cc7c2 <unknown>\nE       #15 0x5581002debbd <unknown>\nE       #16 0x5581002b72b5 <unknown>\nE       #17 0x5581002f8738 <unknown>\nE       #18 0x5581002f894d <unknown>\nE       #19 0x558100306ff1 <unknown>\nE       #20 0x7fcbfa294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":true,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1730449624249,"stop":1730449624303,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1730449624303,"stop":1730449653594,"duration":29291},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730449656574,"stop":1730449656574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"driver::0","time":{"start":1730449666648,"stop":1730449666720,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Contact page"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_ContactPage"},{"name":"subSuite","value":"TestContactPage"},{"name":"host","value":"fv-az984-882"},{"name":"thread","value":"1758-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_ContactPage"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'edge'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":4},"items":[{"uid":"bd8f2311521e8acc","status":"passed","time":{"start":1730448512095,"stop":1730448523677,"duration":11582}},{"uid":"afe576fa415401a6","status":"passed","time":{"start":1730447077381,"stop":1730447088281,"duration":10900}},{"uid":"395d475cd996c032","status":"failed","statusDetails":"AssertionError: FAILURE: assert 'Full name: W...JEiZRO15A\\r\\n' == 'Full name: A...Xd1ekLNYa\\r\\n'\n  \n  - Full name: Amy Brown\r\n  - Email address: cjones@example.net\r\n  - Your message: D65XhJ1nFPs Xd1ekLNYa\r\n  + Full name: William Stewart\r\n  + Email address: davismelissa@example.com\r\n  + Your message: ZDt9QjPAKnRSD3PxBV ytBY77bIjkJEiZRO15A\ntest_ContactPage.py:46 in test_2() -> with check, allure.step(\"Email is correct\"):\ntest_ContactPage.py:47 in test_2 -> assert actual_email == expected_email\nAssertionError: assert 'Full name: W...JEiZRO15A\\r\\n' == 'Full name: A...Xd1ekLNYa\\r\\n'\n  \n  - Full name: Amy Brown\r\n  - Email address: cjones@example.net\r\n  - Your message: D65XhJ1nFPs Xd1ekLNYa\r\n  + Full name: William Stewart\r\n  + Email address: davismelissa@example.com\r\n  + Your message: ZDt9QjPAKnRSD3PxBV ytBY77bIjkJEiZRO15A\r\n\n\n------------------------------------------------------------\nFailed Checks: 1","time":{"start":1730384110632,"stop":1730384121482,"duration":10850}}]},"tags":[]},"source":"622d51f39d62f45f.json","parameterValues":["'edge'"]}
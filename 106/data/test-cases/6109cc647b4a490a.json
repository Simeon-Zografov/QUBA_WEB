{"uid":"6109cc647b4a490a","name":"Unsuccessfully login with email: simeon.hhl.qagmail.com and password: Test#1234","fullName":"Tests.test_Login.TestLogin#test_3","historyId":"be6ec85270b6ccb73c33ab53bad98d52","time":{"start":1733987875592,"stop":1733987910610,"duration":35018},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16","statusTrace":"self = <Tests.test_Login.TestLogin object at 0x7fb2ab12b350>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"b55c655a-c3cf-4ab3-90d8-c00e4775c8cf\")>\nemail = 'simeon.hhl.qagmail.com', password = 'Test#1234'\nerror = 'Please enter a valid email', test_case = 'C58783'\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Login')\n    @allure.title(\"Unsuccessfully login with email: {email} and password: {password}\")\n    @allure.issue(\"QP-382\", \"Story QP-382\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58783\", \"C58783\")\n    @allure.testcase(\"58784\", \"C58784\")\n    @allure.testcase(\"58785\", \"C58785\")\n    @allure.testcase(\"58785\", \"C58786\")\n    @pytest.mark.dependency(depends=[\"test_1\"])\n    @pytest.mark.parametrize('email,password,error,test_case', [\n        (EMAIL[:-1], PASSWORD, \"There was a problem logging you in. Please try again.\", \"C58784\"),\n        (EMAIL, PASSWORD[:-1], \"There was a problem logging you in. Please try again.\", \"C58785\"),\n        (EMAIL.replace(\"@\", \"\"), PASSWORD, \"Please enter a valid email\", \"C58783\"),\n        (\"\", PASSWORD, \"Please enter your email\", \"C58784\"),\n        (EMAIL, \"\", \"Please enter your password\", \"C58785\")\n    ])\n    def test_3(self, driver, email, password, error, test_case):\n        current_browser = self.current_browser\n        login_obj = Login(driver)\n        driver.refresh()\n        login_obj.set_email_field(email, current_browser)\n        login_obj.set_password_field(password, current_browser)\n        with check, allure.step(f\"{test_case}: Check for error\"):\n            if \"Please enter\" in error:\n>               assert login_obj.is_filed_error_message_visible()\n\nTests/test_Login.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/LoginPage.py:53: in is_filed_error_message_visible\n    message = wait.until(EC.visibility_of_element_located(self.field_error_message))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b55c655a-c3cf-4ab3-90d8-c00e4775c8cf\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fb2aafbfd80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16","statusTrace":"self = <Tests.test_Login.TestLogin object at 0x7fb2ab12b350>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"b55c655a-c3cf-4ab3-90d8-c00e4775c8cf\")>\nemail = 'simeon.hhl.qagmail.com', password = 'Test#1234'\nerror = 'Please enter a valid email', test_case = 'C58783'\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Login')\n    @allure.title(\"Unsuccessfully login with email: {email} and password: {password}\")\n    @allure.issue(\"QP-382\", \"Story QP-382\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58783\", \"C58783\")\n    @allure.testcase(\"58784\", \"C58784\")\n    @allure.testcase(\"58785\", \"C58785\")\n    @allure.testcase(\"58785\", \"C58786\")\n    @pytest.mark.dependency(depends=[\"test_1\"])\n    @pytest.mark.parametrize('email,password,error,test_case', [\n        (EMAIL[:-1], PASSWORD, \"There was a problem logging you in. Please try again.\", \"C58784\"),\n        (EMAIL, PASSWORD[:-1], \"There was a problem logging you in. Please try again.\", \"C58785\"),\n        (EMAIL.replace(\"@\", \"\"), PASSWORD, \"Please enter a valid email\", \"C58783\"),\n        (\"\", PASSWORD, \"Please enter your email\", \"C58784\"),\n        (EMAIL, \"\", \"Please enter your password\", \"C58785\")\n    ])\n    def test_3(self, driver, email, password, error, test_case):\n        current_browser = self.current_browser\n        login_obj = Login(driver)\n        driver.refresh()\n        login_obj.set_email_field(email, current_browser)\n        login_obj.set_password_field(password, current_browser)\n        with check, allure.step(f\"{test_case}: Check for error\"):\n            if \"Please enter\" in error:\n>               assert login_obj.is_filed_error_message_visible()\n\nTests/test_Login.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/LoginPage.py:53: in is_filed_error_message_visible\n    message = wait.until(EC.visibility_of_element_located(self.field_error_message))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b55c655a-c3cf-4ab3-90d8-c00e4775c8cf\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fb2aafbfd80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"C58783: Check for error","time":{"start":1733987879076,"stop":1733987910609,"duration":31533},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n","statusTrace":"  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Tests/test_Login.py\", line 80, in test_3\n    assert login_obj.is_filed_error_message_visible()\n  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Pages/LoginPage.py\", line 53, in is_filed_error_message_visible\n    message = wait.until(EC.visibility_of_element_located(self.field_error_message))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Login"},{"name":"severity","value":"normal"},{"name":"tag","value":"dependency(depends=['test_1'])"},{"name":"tag","value":"flaky(reruns=3, reruns_delay=1)"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_Login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az1436-36"},{"name":"thread","value":"1939-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_Login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'firefox'"},{"name":"email","value":"'simeon.hhl.qagmail.com'"},{"name":"error","value":"'Please enter a valid email'"},{"name":"password","value":"'Test#1234'"},{"name":"test_case","value":"'C58783'"}],"links":[{"name":"C58786","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58785","type":"tms"},{"name":"C58785","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58785","type":"tms"},{"name":"C58784","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58784","type":"tms"},{"name":"C58783","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58783","type":"tms"},{"name":"Epic QP-356","url":"https://hedgehog-lab.atlassian.net/browse/QP-356","type":"issue"},{"name":"Story QP-382","url":"https://hedgehog-lab.atlassian.net/browse/QP-382","type":"issue"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["flaky(reruns=3, reruns_delay=1)","dependency(depends=['test_1'])"]},"source":"6109cc647b4a490a.json","parameterValues":["'firefox'","'simeon.hhl.qagmail.com'","'Please enter a valid email'","'Test#1234'","'C58783'"]}
{"uid":"ed608a26054fa3c4","name":"Saved sites cards attributes","fullName":"Tests.test_Sites.TestSites#test_12","historyId":"d543cc1169e3ea347c4559575b1be985","time":{"start":1734332428610,"stop":1734332428667,"duration":57},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1734332335978,"stop":1734332336037,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1734332336038,"stop":1734332343603,"duration":7565},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[{"name":"C58738: Grilhouse Restaurant title is visible","time":{"start":1734332428610,"stop":1734332428620,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"C58738: Grilhouse Restaurant summary is visible","time":{"start":1734332428620,"stop":1734332428629,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"C58738: Grilhouse Restaurant image is visible","time":{"start":1734332428629,"stop":1734332428639,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"C58738: Grilhouse Restaurant saved site icon is visible","time":{"start":1734332428639,"stop":1734332428641,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"C58738: ShopEase title is visible","time":{"start":1734332428641,"stop":1734332428650,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"C58738: ShopEase summary is visible","time":{"start":1734332428650,"stop":1734332428657,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"C58738: ShopEase image is visible","time":{"start":1734332428657,"stop":1734332428664,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"C58738: ShopEase saved site icon is visible","time":{"start":1734332428664,"stop":1734332428667,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1734332880247,"stop":1734332880501,"duration":254},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Sites"},{"name":"severity","value":"normal"},{"name":"tag","value":"flaky(reruns=3, reruns_delay=1)"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_Sites"},{"name":"subSuite","value":"TestSites"},{"name":"host","value":"Mac-1734331406571.local"},{"name":"thread","value":"2893-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_Sites"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'safari'"}],"links":[{"name":"C58738","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58738","type":"tms"},{"name":"Epic QP-356","url":"https://hedgehog-lab.atlassian.net/browse/QP-356","type":"issue"},{"name":"Story QP-383","url":"https://hedgehog-lab.atlassian.net/browse/QP-383","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"81041222772f1948","reportUrl":"https://Simeon-Zografov.github.io/QUBA_WEB/156//#testresult/81041222772f1948","status":"passed","time":{"start":1734233969980,"stop":1734233970076,"duration":96}},{"uid":"f10ce0972bc7d54e","reportUrl":"https://Simeon-Zografov.github.io/QUBA_WEB/155//#testresult/f10ce0972bc7d54e","status":"passed","time":{"start":1734076790587,"stop":1734076790628,"duration":41}},{"uid":"a45db4b125a13df3","reportUrl":"https://Simeon-Zografov.github.io/QUBA_WEB/154//#testresult/a45db4b125a13df3","status":"failed","statusDetails":"AssertionError: FAILURE: assert False\n +  where False = <bound method Sites.is_saved_site_icon_visible of <Pages.SitesPage.Sites object at 0x1037dac50>>('savedSites', 'مسجد بني أنيف')\n +    where <bound method Sites.is_saved_site_icon_visible of <Pages.SitesPage.Sites object at 0x1037dac50>> = <Pages.SitesPage.Sites object at 0x1037dac50>.is_saved_site_icon_visible\ntest_Sites.py:280 in test_12() -> with check, allure.step(f\"C58738: {site['title']} saved site icon is visible\"):\ntest_Sites.py:281 in test_12 -> assert sites_obj.is_saved_site_icon_visible(\"savedSites\", site['title'])\nAssertionError: assert False\n +  where False = <bound method Sites.is_saved_site_icon_visible of <Pages.SitesPage.Sites object at 0x1037dac50>>('savedSites', 'مسجد بني أنيف')\n +    where <bound method Sites.is_saved_site_icon_visible of <Pages.SitesPage.Sites object at 0x1037dac50>> = <Pages.SitesPage.Sites object at 0x1037dac50>.is_saved_site_icon_visible\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Sites.TestSites object at 0x103346250>\ndriver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"0A9F22D5-1209-4B92-A99D-2D67289D8DD2\")>\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Sites')\n    @allure.title(\"Saved sites cards attributes\")\n    @allure.issue(\"QP-383\", \"Story QP-383\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58738\", \"C58738\")\n    def test_12(self, driver):\n        sites_obj = Sites(driver)\n        num = 1\n        for site_id, site in self.saved_sites.items():\n            with check, allure.step(f\"C58738: {site['title']} title is visible\"):\n                assert sites_obj.is_site_card_title_visible(\"savedSites\", num)\n            with check, allure.step(f\"C58738: {site['title']} summary is visible\"):\n                assert sites_obj.is_site_card_summary_visible(\"savedSites\", num)\n            with check, allure.step(f\"C58738: {site['title']} image is visible\"):\n                assert sites_obj.is_site_card_image_visible(\"savedSites\", num)\n            with check, allure.step(f\"C58738: {site['title']} saved site icon is visible\"):\n>               assert sites_obj.is_saved_site_icon_visible(\"savedSites\", site['title'])\n\nTests/test_Sites.py:281: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/SitesPage.py:154: in is_saved_site_icon_visible\n    icon = self.driver.find_elements(By.XPATH,\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:771: in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x103497010>\nresponse = {'status': 408, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","time":{"start":1734074482930,"stop":1734074503760,"duration":20830}}]},"tags":["flaky(reruns=3, reruns_delay=1)"]},"source":"ed608a26054fa3c4.json","parameterValues":["'safari'"]}
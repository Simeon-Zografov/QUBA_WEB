{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Test defects","children":[{"name":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@class='nav nav-tabs']\"}\n  (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x557bef35631a <unknown>\n#1 0x557beee6c6e0 <unknown>\n#2 0x557beeebb3e6 <unknown>\n#3 0x557beeebb681 <unknown>\n#4 0x557beef00b04 <unknown>\n#5 0x557beeedf48d <unknown>\n#6 0x557beeefded7 <unknown>\n#7 0x557beeedf203 <unknown>\n#8 0x557beeeadcc0 <unknown>\n#9 0x557beeeaec9e <unknown>\n#10 0x557bef323d0b <unknown>\n#11 0x557bef327c92 <unknown>\n#12 0x557bef310b3c <unknown>\n#13 0x557bef328807 <unknown>\n#14 0x557bef2f60df <unknown>\n#15 0x557bef345578 <unknown>\n#16 0x557bef345740 <unknown>\n#17 0x557bef355196 <unknown>\n#18 0x7f533ca94ac3 <unknown>","children":[{"name":"Site with more than one photo","uid":"f3a1537a03abd90e","parentUid":"d9a71da0947f46659e53f1bfe20c1337","status":"broken","time":{"start":1732895813926,"stop":1732895823973,"duration":10047},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":3,"retriesStatusChange":true,"parameters":["'chrome'"],"tags":["flaky(reruns=3, reruns_delay=1)"]}],"uid":"d9a71da0947f46659e53f1bfe20c1337"},{"name":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@class='nav nav-tabs']\"}\n  (Session info: MicrosoftEdge=131.0.2903.63); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55952ce9095e <unknown>\n#1 0x55952c945b76 <unknown>\n#2 0x55952c99345e <unknown>\n#3 0x55952c993731 <unknown>\n#4 0x55952c9d74f4 <unknown>\n#5 0x55952c9b720d <unknown>\n#6 0x55952c9d518a <unknown>\n#7 0x55952c9b6f83 <unknown>\n#8 0x55952c98701e <unknown>\n#9 0x55952c987cfe <unknown>\n#10 0x55952ce659f1 <unknown>\n#11 0x55952ce68bee <unknown>\n#12 0x55952ce6866b <unknown>\n#13 0x55952ce69015 <unknown>\n#14 0x55952ce57402 <unknown>\n#15 0x55952ce6939d <unknown>\n#16 0x55952ce415c5 <unknown>\n#17 0x55952ce81018 <unknown>\n#18 0x55952ce8122f <unknown>\n#19 0x55952ce8f54c <unknown>\n#20 0x7ff125894ac3 <unknown>","children":[{"name":"Site with more than one photo","uid":"b7453f39122a37ac","parentUid":"8205289bce4d519ed20c741b1c193994","status":"broken","time":{"start":1732895857118,"stop":1732895867183,"duration":10065},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":3,"retriesStatusChange":true,"parameters":["'edge'"],"tags":["flaky(reruns=3, reruns_delay=1)"]}],"uid":"8205289bce4d519ed20c741b1c193994"}],"uid":"bdbf199525818fae7a8651db9eafe741"},{"name":"Product defects","children":[{"name":"AssertionError: FAILURE: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7f96d92b3710>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7f96d92b3710>> = <Pages.AboutPage.AboutPage object at 0x7f96d92b3710>.is_next_slide_button_visible\ntest_Sites.py:515 in test_21() -> with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\ntest_Sites.py:516 in test_21 -> assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\nAssertionError: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7f96d92b3710>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7f96d92b3710>> = <Pages.AboutPage.AboutPage object at 0x7f96d92b3710>.is_next_slide_button_visible\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Sites.TestSites object at 0x7f96dad84950>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"846231b13cfd3e50c92a4a9f36f94edd\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Individual Sites')\n    @allure.title(\"Scroll images with buttons\")\n    @allure.issue(\"QP-264\", \"Story QP-264\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58414\", \"C58414\")\n    def test_21(self, driver):\n        about_obj = AboutPage(driver)\n        with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\n            assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\n        with check, allure.step(\"C58414: Carousel position is at the start\"):\n            assert about_obj.get_image_carousel_position() == \"start\"\n        with check, allure.step(\"C58414: Next and previous buttons after clicking next\"):\n>           about_obj.click_next_slide_button()\n\nTests/test_Sites.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/AboutPage.py:105: in click_next_slide_button\n    self.driver.find_element(*self.next_slide_button).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f96dadb4310>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x557bef345740 \\\\u003Cunknown>\\\\n#17 0x557bef355196 \\\\u003Cunknown>\\\\n#18 0x7f533ca94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@class='next-slide']\"}\nE         (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x557bef35631a <unknown>\nE       #1 0x557beee6c6e0 <unknown>\nE       #2 0x557beeebb3e6 <unknown>\nE       #3 0x557beeebb681 <unknown>\nE       #4 0x557beef00b04 <unknown>\nE       #5 0x557beeedf48d <unknown>\nE       #6 0x557beeefded7 <unknown>\nE       #7 0x557beeedf203 <unknown>\nE       #8 0x557beeeadcc0 <unknown>\nE       #9 0x557beeeaec9e <unknown>\nE       #10 0x557bef323d0b <unknown>\nE       #11 0x557bef327c92 <unknown>\nE       #12 0x557bef310b3c <unknown>\nE       #13 0x557bef328807 <unknown>\nE       #14 0x557bef2f60df <unknown>\nE       #15 0x557bef345578 <unknown>\nE       #16 0x557bef345740 <unknown>\nE       #17 0x557bef355196 <unknown>\nE       #18 0x7f533ca94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","children":[{"name":"Scroll images with buttons","uid":"7f8d945a465d3d53","parentUid":"69775637f37959afc6a8cbb42cd5914c","status":"failed","time":{"start":1732895890381,"stop":1732895911450,"duration":21069},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":3,"retriesStatusChange":false,"parameters":["'chrome'"],"tags":["flaky(reruns=3, reruns_delay=1)"]}],"uid":"69775637f37959afc6a8cbb42cd5914c"},{"name":"AssertionError: FAILURE: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fb1877ae9d0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fb1877ae9d0>> = <Pages.AboutPage.AboutPage object at 0x7fb1877ae9d0>.is_next_slide_button_visible\ntest_Sites.py:515 in test_21() -> with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\ntest_Sites.py:516 in test_21 -> assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\nAssertionError: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fb1877ae9d0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fb1877ae9d0>> = <Pages.AboutPage.AboutPage object at 0x7fb1877ae9d0>.is_next_slide_button_visible\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Sites.TestSites object at 0x7fb1875a5150>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"0e6221d772af8f64f8c08b0ea9d30ce2\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Individual Sites')\n    @allure.title(\"Scroll images with buttons\")\n    @allure.issue(\"QP-264\", \"Story QP-264\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58414\", \"C58414\")\n    def test_21(self, driver):\n        about_obj = AboutPage(driver)\n        with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\n            assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\n        with check, allure.step(\"C58414: Carousel position is at the start\"):\n            assert about_obj.get_image_carousel_position() == \"start\"\n        with check, allure.step(\"C58414: Next and previous buttons after clicking next\"):\n>           about_obj.click_next_slide_button()\n\nTests/test_Sites.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/AboutPage.py:105: in click_next_slide_button\n    self.driver.find_element(*self.next_slide_button).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1870233d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x55952ce8122f \\\\u003Cunknown>\\\\n#19 0x55952ce8f54c \\\\u003Cunknown>\\\\n#20 0x7ff125894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@class='next-slide']\"}\nE         (Session info: MicrosoftEdge=131.0.2903.63); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55952ce9095e <unknown>\nE       #1 0x55952c945b76 <unknown>\nE       #2 0x55952c99345e <unknown>\nE       #3 0x55952c993731 <unknown>\nE       #4 0x55952c9d74f4 <unknown>\nE       #5 0x55952c9b720d <unknown>\nE       #6 0x55952c9d518a <unknown>\nE       #7 0x55952c9b6f83 <unknown>\nE       #8 0x55952c98701e <unknown>\nE       #9 0x55952c987cfe <unknown>\nE       #10 0x55952ce659f1 <unknown>\nE       #11 0x55952ce68bee <unknown>\nE       #12 0x55952ce6866b <unknown>\nE       #13 0x55952ce69015 <unknown>\nE       #14 0x55952ce57402 <unknown>\nE       #15 0x55952ce6939d <unknown>\nE       #16 0x55952ce415c5 <unknown>\nE       #17 0x55952ce81018 <unknown>\nE       #18 0x55952ce8122f <unknown>\nE       #19 0x55952ce8f54c <unknown>\nE       #20 0x7ff125894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","children":[{"name":"Scroll images with buttons","uid":"59e533d20b97321f","parentUid":"eef5438fed66ea79d1125d28813f9556","status":"failed","time":{"start":1732895933609,"stop":1732895954693,"duration":21084},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":3,"retriesStatusChange":false,"parameters":["'edge'"],"tags":["flaky(reruns=3, reruns_delay=1)"]}],"uid":"eef5438fed66ea79d1125d28813f9556"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}
{"uid":"abe8fe3d8051576a","name":"The historic tab is selected by default","fullName":"Tests.test_Sites.TestSites#test_2","historyId":"3a5f11ac3c518f5d3995eb9fce3c74c5","time":{"start":1730449698857,"stop":1730449708924,"duration":10067},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@aria-controls='Historic']\"}\n  (Session info: MicrosoftEdge=129.0.2792.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x561ad70b41ae <unknown>\n#1 0x561ad6d77686 <unknown>\n#2 0x561ad6dc7083 <unknown>\n#3 0x561ad6dc71a1 <unknown>\n#4 0x561ad6e0dc84 <unknown>\n#5 0x561ad6dec29d <unknown>\n#6 0x561ad6e0b72e <unknown>\n#7 0x561ad6dec013 <unknown>\n#8 0x561ad6dba19d <unknown>\n#9 0x561ad6dbae8e <unknown>\n#10 0x561ad7087161 <unknown>\n#11 0x561ad708a3cd <unknown>\n#12 0x561ad7089e4b <unknown>\n#13 0x561ad708a835 <unknown>\n#14 0x561ad70787c2 <unknown>\n#15 0x561ad708abbd <unknown>\n#16 0x561ad70632b5 <unknown>\n#17 0x561ad70a4738 <unknown>\n#18 0x561ad70a494d <unknown>\n#19 0x561ad70b2ff1 <unknown>\n#20 0x7fc468894ac3 <unknown>","statusTrace":"self = <Tests.test_Sites.TestSites object at 0x7f7c55a418d0>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"fe2ba73661628aa4f16f4930b7aefdd8\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Sites')\n    @allure.title(\"The historic tab is selected by default\")\n    def test_2(self, driver):\n        sites_obj = Sites(driver)\n        with check, allure.step(\"Historic tab is selected\"):\n>           assert sites_obj.is_historic_tab_selected()\n\nTests/test_Sites.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/SitesPage.py:54: in is_historic_tab_selected\n    attribute = self.driver.find_element(*self.historic_sites_button).get_attribute(\"aria-selected\")\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7c55fa9e90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x561ad70a494d \\\\u003Cunknown>\\\\n#19 0x561ad70b2ff1 \\\\u003Cunknown>\\\\n#20 0x7fc468894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@aria-controls='Historic']\"}\nE         (Session info: MicrosoftEdge=129.0.2792.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x561ad70b41ae <unknown>\nE       #1 0x561ad6d77686 <unknown>\nE       #2 0x561ad6dc7083 <unknown>\nE       #3 0x561ad6dc71a1 <unknown>\nE       #4 0x561ad6e0dc84 <unknown>\nE       #5 0x561ad6dec29d <unknown>\nE       #6 0x561ad6e0b72e <unknown>\nE       #7 0x561ad6dec013 <unknown>\nE       #8 0x561ad6dba19d <unknown>\nE       #9 0x561ad6dbae8e <unknown>\nE       #10 0x561ad7087161 <unknown>\nE       #11 0x561ad708a3cd <unknown>\nE       #12 0x561ad7089e4b <unknown>\nE       #13 0x561ad708a835 <unknown>\nE       #14 0x561ad70787c2 <unknown>\nE       #15 0x561ad708abbd <unknown>\nE       #16 0x561ad70632b5 <unknown>\nE       #17 0x561ad70a4738 <unknown>\nE       #18 0x561ad70a494d <unknown>\nE       #19 0x561ad70b2ff1 <unknown>\nE       #20 0x7fc468894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1730449624249,"stop":1730449624303,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_class_fixture_TestSites","time":{"start":1730449690858,"stop":1730449692606,"duration":1748},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1730449692606,"stop":1730449693071,"duration":465},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@aria-controls='Historic']\"}\n  (Session info: MicrosoftEdge=129.0.2792.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x561ad70b41ae <unknown>\n#1 0x561ad6d77686 <unknown>\n#2 0x561ad6dc7083 <unknown>\n#3 0x561ad6dc71a1 <unknown>\n#4 0x561ad6e0dc84 <unknown>\n#5 0x561ad6dec29d <unknown>\n#6 0x561ad6e0b72e <unknown>\n#7 0x561ad6dec013 <unknown>\n#8 0x561ad6dba19d <unknown>\n#9 0x561ad6dbae8e <unknown>\n#10 0x561ad7087161 <unknown>\n#11 0x561ad708a3cd <unknown>\n#12 0x561ad7089e4b <unknown>\n#13 0x561ad708a835 <unknown>\n#14 0x561ad70787c2 <unknown>\n#15 0x561ad708abbd <unknown>\n#16 0x561ad70632b5 <unknown>\n#17 0x561ad70a4738 <unknown>\n#18 0x561ad70a494d <unknown>\n#19 0x561ad70b2ff1 <unknown>\n#20 0x7fc468894ac3 <unknown>","statusTrace":"self = <Tests.test_Sites.TestSites object at 0x7f7c55a418d0>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"fe2ba73661628aa4f16f4930b7aefdd8\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Sites')\n    @allure.title(\"The historic tab is selected by default\")\n    def test_2(self, driver):\n        sites_obj = Sites(driver)\n        with check, allure.step(\"Historic tab is selected\"):\n>           assert sites_obj.is_historic_tab_selected()\n\nTests/test_Sites.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/SitesPage.py:54: in is_historic_tab_selected\n    attribute = self.driver.find_element(*self.historic_sites_button).get_attribute(\"aria-selected\")\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7c55fa9e90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x561ad70a494d \\\\u003Cunknown>\\\\n#19 0x561ad70b2ff1 \\\\u003Cunknown>\\\\n#20 0x7fc468894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@aria-controls='Historic']\"}\nE         (Session info: MicrosoftEdge=129.0.2792.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x561ad70b41ae <unknown>\nE       #1 0x561ad6d77686 <unknown>\nE       #2 0x561ad6dc7083 <unknown>\nE       #3 0x561ad6dc71a1 <unknown>\nE       #4 0x561ad6e0dc84 <unknown>\nE       #5 0x561ad6dec29d <unknown>\nE       #6 0x561ad6e0b72e <unknown>\nE       #7 0x561ad6dec013 <unknown>\nE       #8 0x561ad6dba19d <unknown>\nE       #9 0x561ad6dbae8e <unknown>\nE       #10 0x561ad7087161 <unknown>\nE       #11 0x561ad708a3cd <unknown>\nE       #12 0x561ad7089e4b <unknown>\nE       #13 0x561ad708a835 <unknown>\nE       #14 0x561ad70787c2 <unknown>\nE       #15 0x561ad708abbd <unknown>\nE       #16 0x561ad70632b5 <unknown>\nE       #17 0x561ad70a4738 <unknown>\nE       #18 0x561ad70a494d <unknown>\nE       #19 0x561ad70b2ff1 <unknown>\nE       #20 0x7fc468894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","steps":[{"name":"Historic tab is selected","time":{"start":1730449698858,"stop":1730449708923,"duration":10065},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@aria-controls='Historic']\"}\n  (Session info: MicrosoftEdge=129.0.2792.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x561ad70b41ae <unknown>\n#1 0x561ad6d77686 <unknown>\n#2 0x561ad6dc7083 <unknown>\n#3 0x561ad6dc71a1 <unknown>\n#4 0x561ad6e0dc84 <unknown>\n#5 0x561ad6dec29d <unknown>\n#6 0x561ad6e0b72e <unknown>\n#7 0x561ad6dec013 <unknown>\n#8 0x561ad6dba19d <unknown>\n#9 0x561ad6dbae8e <unknown>\n#10 0x561ad7087161 <unknown>\n#11 0x561ad708a3cd <unknown>\n#12 0x561ad7089e4b <unknown>\n#13 0x561ad708a835 <unknown>\n#14 0x561ad70787c2 <unknown>\n#15 0x561ad708abbd <unknown>\n#16 0x561ad70632b5 <unknown>\n#17 0x561ad70a4738 <unknown>\n#18 0x561ad70a494d <unknown>\n#19 0x561ad70b2ff1 <unknown>\n#20 0x7fc468894ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Tests/test_Sites.py\", line 41, in test_2\n    assert sites_obj.is_historic_tab_selected()\n  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Pages/SitesPage.py\", line 54, in is_historic_tab_selected\n    attribute = self.driver.find_element(*self.historic_sites_button).get_attribute(\"aria-selected\")\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1730449907478,"stop":1730449907574,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_class_fixture_TestSites::0","time":{"start":1730449907575,"stop":1730449907575,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Sites"},{"name":"severity","value":"minor"},{"name":"tag","value":"flaky(reruns=3, reruns_delay=0.5, rerun_except='assert')"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_Sites"},{"name":"subSuite","value":"TestSites"},{"name":"host","value":"fv-az984-882"},{"name":"thread","value":"1758-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_Sites"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'edge'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["flaky(reruns=3, reruns_delay=0.5, rerun_except='assert')"]},"source":"abe8fe3d8051576a.json","parameterValues":["'edge'"]}
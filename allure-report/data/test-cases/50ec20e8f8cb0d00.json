{"uid":"50ec20e8f8cb0d00","name":"Click Add to Calendar link","fullName":"Tests.test_Events.TestEvents#test_17","historyId":"cd1918ad72dc99a98ac7ead403f34017","time":{"start":1733302678597,"stop":1733302678611,"duration":14},"status":"broken","statusMessage":"selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: You can change which websites can download files in the Websites section of Safari Settings.\nMessage:","statusTrace":"self = <Tests.test_Events.TestEvents object at 0x105eb8650>\ndriver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"6DF4DBA8-63BD-4037-A183-35F1F2588A0F\")>\n\n    @severity(severity_level.CRITICAL)\n    @allure.feature('Individual Events')\n    @allure.title(\"Click Add to Calendar link\")\n    @allure.issue(\"QP-268\", \"Story QP-268\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58500\", \"C58500\")\n    @pytest.mark.dependency(depends=[\"test_8\"])\n    def test_17(self, driver):\n        events_obj = Events(driver)\n        download_dir = self.create_download_dir(self.current_browser)\n>       file_name = self.get_download_file_name(driver.current_url)\n\nTests/test_Events.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:437: in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1069c7690>\nresponse = {'status': 500, 'value': '{\"value\":{\"message\":\"\",\"stacktrace\":\"\",\"data\":{\"text\":\"You can change which websites can download files in the Websites section of Safari Settings.\"},\"error\":\"unexpected alert open\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: You can change which websites can download files in the Websites section of Safari Settings.\nE           Message:\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:228: UnexpectedAlertPresentException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":true,"beforeStages":[{"name":"_session_faker","time":{"start":1733302618062,"stop":1733302618110,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1733302618110,"stop":1733302623789,"duration":5679},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"driver::0","time":{"start":1733302678653,"stop":1733302678884,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"Individual Events"},{"name":"tag","value":"dependency(depends=['test_8'])"},{"name":"tag","value":"flaky(reruns=3, reruns_delay=1)"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_Events"},{"name":"subSuite","value":"TestEvents"},{"name":"host","value":"Mac-1733301632318.local"},{"name":"thread","value":"2209-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_Events"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'safari'"}],"links":[{"name":"C58500","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58500","type":"tms"},{"name":"Epic QP-356","url":"https://hedgehog-lab.atlassian.net/browse/QP-356","type":"issue"},{"name":"Story QP-268","url":"https://hedgehog-lab.atlassian.net/browse/QP-268","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"b18ac5df20e45b3c","status":"failed","statusDetails":"AssertionError: FAILURE: assert False\ntest_Events.py:355 in test_17() -> with check, allure.step(\"C58500: File is downloaded\"):\ntest_Events.py:356 in test_17 -> assert cond\nAssertionError: assert False\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Events.TestEvents object at 0x105eb8650>\ndriver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"6DF4DBA8-63BD-4037-A183-35F1F2588A0F\")>\n\n    @severity(severity_level.CRITICAL)\n    @allure.feature('Individual Events')\n    @allure.title(\"Click Add to Calendar link\")\n    @allure.issue(\"QP-268\", \"Story QP-268\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58500\", \"C58500\")\n    @pytest.mark.dependency(depends=[\"test_8\"])\n    def test_17(self, driver):\n        events_obj = Events(driver)\n        download_dir = self.create_download_dir(self.current_browser)\n        file_name = self.get_download_file_name(driver.current_url)\n        file_path = os.path.join(download_dir, file_name)\n        events_obj.click_single_event_add_to_calendar_link()\n    \n        cond = False\n        for _ in range(10):\n            if os.path.exists(file_path):\n                cond = True\n                break\n            time.sleep(1)\n        with check, allure.step(\"C58500: File is downloaded\"):\n            assert cond\n    \n        file_content = {}\n>       file = open(file_path, 'r')\nE       FileNotFoundError: [Errno 2] No such file or directory: '/Users/runner/Downloads/leverage-synergies.ics'\n\nTests/test_Events.py:359: FileNotFoundError","time":{"start":1733302666589,"stop":1733302677534,"duration":10945}},{"uid":"6bae5bb1f49ed780","status":"broken","statusDetails":"selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: You can change which websites can download files in the Websites section of Safari Settings.\nMessage:","time":{"start":1733302665437,"stop":1733302665454,"duration":17}},{"uid":"8bf2f0eede532148","status":"failed","statusDetails":"AssertionError: FAILURE: assert False\ntest_Events.py:355 in test_17() -> with check, allure.step(\"C58500: File is downloaded\"):\ntest_Events.py:356 in test_17 -> assert cond\nAssertionError: assert False\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Events.TestEvents object at 0x105eb8650>\ndriver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"6DF4DBA8-63BD-4037-A183-35F1F2588A0F\")>\n\n    @severity(severity_level.CRITICAL)\n    @allure.feature('Individual Events')\n    @allure.title(\"Click Add to Calendar link\")\n    @allure.issue(\"QP-268\", \"Story QP-268\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58500\", \"C58500\")\n    @pytest.mark.dependency(depends=[\"test_8\"])\n    def test_17(self, driver):\n        events_obj = Events(driver)\n        download_dir = self.create_download_dir(self.current_browser)\n        file_name = self.get_download_file_name(driver.current_url)\n        file_path = os.path.join(download_dir, file_name)\n        events_obj.click_single_event_add_to_calendar_link()\n    \n        cond = False\n        for _ in range(10):\n            if os.path.exists(file_path):\n                cond = True\n                break\n            time.sleep(1)\n        with check, allure.step(\"C58500: File is downloaded\"):\n            assert cond\n    \n        file_content = {}\n>       file = open(file_path, 'r')\nE       FileNotFoundError: [Errno 2] No such file or directory: '/Users/runner/Downloads/leverage-synergies.ics'\n\nTests/test_Events.py:359: FileNotFoundError","time":{"start":1733302653586,"stop":1733302664391,"duration":10805}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["dependency(depends=['test_8'])","flaky(reruns=3, reruns_delay=1)"]},"source":"50ec20e8f8cb0d00.json","parameterValues":["'safari'"]}
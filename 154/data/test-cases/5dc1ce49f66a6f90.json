{"uid":"5dc1ce49f66a6f90","name":"Scroll images with buttons","fullName":"Tests.test_Sites.TestSites#test_21","historyId":"63d88b37a58b955e3b3f8425afd26a6b","time":{"start":1734074769223,"stop":1734074790249,"duration":21026},"status":"failed","statusMessage":"AssertionError: FAILURE: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\ntest_Sites.py:517 in test_21() -> with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\ntest_Sites.py:518 in test_21 -> assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\nAssertionError: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Sites.TestSites object at 0x7fccb7363810>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"69bc9d104225f5c7f38970f751ca7497\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Individual Sites')\n    @allure.title(\"Scroll images with buttons\")\n    @allure.issue(\"QP-264\", \"Story QP-264\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58414\", \"C58414\")\n    def test_21(self, driver):\n        about_obj = AboutPage(driver)\n        with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\n            assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\n        with check, allure.step(\"C58414: Carousel position is at the start\"):\n>           assert about_obj.get_image_carousel_position() == \"start\"\n\nTests/test_Sites.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/AboutPage.py:140: in get_image_carousel_position\n    carousel = self.driver.find_element(*self.image_carousel)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fccb8a1ab90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#19 0x561494dd853c \\\\u003Cunknown>\\\\n#20 0x7f778789ca94 \\\\u003Cunknown>\\\\n#21 0x7f7787929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='slide-container']\"}\nE         (Session info: MicrosoftEdge=131.0.2903.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x561494dd994e <unknown>\nE       #1 0x56149488eb76 <unknown>\nE       #2 0x5614948dc45e <unknown>\nE       #3 0x5614948dc731 <unknown>\nE       #4 0x5614949204f4 <unknown>\nE       #5 0x56149490020d <unknown>\nE       #6 0x56149491e18a <unknown>\nE       #7 0x5614948fff83 <unknown>\nE       #8 0x5614948d001e <unknown>\nE       #9 0x5614948d0cfe <unknown>\nE       #10 0x561494dae9e1 <unknown>\nE       #11 0x561494db1bde <unknown>\nE       #12 0x561494db165b <unknown>\nE       #13 0x561494db2005 <unknown>\nE       #14 0x561494da03f2 <unknown>\nE       #15 0x561494db238d <unknown>\nE       #16 0x561494d8a5b5 <unknown>\nE       #17 0x561494dca008 <unknown>\nE       #18 0x561494dca21f <unknown>\nE       #19 0x561494dd853c <unknown>\nE       #20 0x7f778789ca94 <unknown>\nE       #21 0x7f7787929c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","statusTrace":"FAILURE: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\ntest_Sites.py:517 in test_21() -> with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\ntest_Sites.py:518 in test_21 -> assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\nAssertionError: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Sites.TestSites object at 0x7fccb7363810>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"69bc9d104225f5c7f38970f751ca7497\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Individual Sites')\n    @allure.title(\"Scroll images with buttons\")\n    @allure.issue(\"QP-264\", \"Story QP-264\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58414\", \"C58414\")\n    def test_21(self, driver):\n        about_obj = AboutPage(driver)\n        with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\n            assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\n        with check, allure.step(\"C58414: Carousel position is at the start\"):\n>           assert about_obj.get_image_carousel_position() == \"start\"\n\nTests/test_Sites.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/AboutPage.py:140: in get_image_carousel_position\n    carousel = self.driver.find_element(*self.image_carousel)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fccb8a1ab90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#19 0x561494dd853c \\\\u003Cunknown>\\\\n#20 0x7f778789ca94 \\\\u003Cunknown>\\\\n#21 0x7f7787929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='slide-container']\"}\nE         (Session info: MicrosoftEdge=131.0.2903.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x561494dd994e <unknown>\nE       #1 0x56149488eb76 <unknown>\nE       #2 0x5614948dc45e <unknown>\nE       #3 0x5614948dc731 <unknown>\nE       #4 0x5614949204f4 <unknown>\nE       #5 0x56149490020d <unknown>\nE       #6 0x56149491e18a <unknown>\nE       #7 0x5614948fff83 <unknown>\nE       #8 0x5614948d001e <unknown>\nE       #9 0x5614948d0cfe <unknown>\nE       #10 0x561494dae9e1 <unknown>\nE       #11 0x561494db1bde <unknown>\nE       #12 0x561494db165b <unknown>\nE       #13 0x561494db2005 <unknown>\nE       #14 0x561494da03f2 <unknown>\nE       #15 0x561494db238d <unknown>\nE       #16 0x561494d8a5b5 <unknown>\nE       #17 0x561494dca008 <unknown>\nE       #18 0x561494dca21f <unknown>\nE       #19 0x561494dd853c <unknown>\nE       #20 0x7f778789ca94 <unknown>\nE       #21 0x7f7787929c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1734072745116,"stop":1734072745184,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1734073564558,"stop":1734073565036,"duration":478},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: FAILURE: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\ntest_Sites.py:517 in test_21() -> with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\ntest_Sites.py:518 in test_21 -> assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\nAssertionError: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Sites.TestSites object at 0x7fccb7363810>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"69bc9d104225f5c7f38970f751ca7497\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Individual Sites')\n    @allure.title(\"Scroll images with buttons\")\n    @allure.issue(\"QP-264\", \"Story QP-264\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58414\", \"C58414\")\n    def test_21(self, driver):\n        about_obj = AboutPage(driver)\n        with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\n            assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\n        with check, allure.step(\"C58414: Carousel position is at the start\"):\n>           assert about_obj.get_image_carousel_position() == \"start\"\n\nTests/test_Sites.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/AboutPage.py:140: in get_image_carousel_position\n    carousel = self.driver.find_element(*self.image_carousel)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fccb8a1ab90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#19 0x561494dd853c \\\\u003Cunknown>\\\\n#20 0x7f778789ca94 \\\\u003Cunknown>\\\\n#21 0x7f7787929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='slide-container']\"}\nE         (Session info: MicrosoftEdge=131.0.2903.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x561494dd994e <unknown>\nE       #1 0x56149488eb76 <unknown>\nE       #2 0x5614948dc45e <unknown>\nE       #3 0x5614948dc731 <unknown>\nE       #4 0x5614949204f4 <unknown>\nE       #5 0x56149490020d <unknown>\nE       #6 0x56149491e18a <unknown>\nE       #7 0x5614948fff83 <unknown>\nE       #8 0x5614948d001e <unknown>\nE       #9 0x5614948d0cfe <unknown>\nE       #10 0x561494dae9e1 <unknown>\nE       #11 0x561494db1bde <unknown>\nE       #12 0x561494db165b <unknown>\nE       #13 0x561494db2005 <unknown>\nE       #14 0x561494da03f2 <unknown>\nE       #15 0x561494db238d <unknown>\nE       #16 0x561494d8a5b5 <unknown>\nE       #17 0x561494dca008 <unknown>\nE       #18 0x561494dca21f <unknown>\nE       #19 0x561494dd853c <unknown>\nE       #20 0x7f778789ca94 <unknown>\nE       #21 0x7f7787929c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","statusTrace":"FAILURE: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\ntest_Sites.py:517 in test_21() -> with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\ntest_Sites.py:518 in test_21 -> assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\nAssertionError: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\n\n\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\nself = <Tests.test_Sites.TestSites object at 0x7fccb7363810>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"69bc9d104225f5c7f38970f751ca7497\")>\n\n    @severity(severity_level.MINOR)\n    @allure.feature('Individual Sites')\n    @allure.title(\"Scroll images with buttons\")\n    @allure.issue(\"QP-264\", \"Story QP-264\")\n    @allure.issue(\"QP-356\", \"Epic QP-356\")\n    @allure.testcase(\"58414\", \"C58414\")\n    def test_21(self, driver):\n        about_obj = AboutPage(driver)\n        with check, allure.step(\"C58414: Initially next is visible and previous is not\"):\n            assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\n        with check, allure.step(\"C58414: Carousel position is at the start\"):\n>           assert about_obj.get_image_carousel_position() == \"start\"\n\nTests/test_Sites.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/AboutPage.py:140: in get_image_carousel_position\n    carousel = self.driver.find_element(*self.image_carousel)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fccb8a1ab90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#19 0x561494dd853c \\\\u003Cunknown>\\\\n#20 0x7f778789ca94 \\\\u003Cunknown>\\\\n#21 0x7f7787929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='slide-container']\"}\nE         (Session info: MicrosoftEdge=131.0.2903.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x561494dd994e <unknown>\nE       #1 0x56149488eb76 <unknown>\nE       #2 0x5614948dc45e <unknown>\nE       #3 0x5614948dc731 <unknown>\nE       #4 0x5614949204f4 <unknown>\nE       #5 0x56149490020d <unknown>\nE       #6 0x56149491e18a <unknown>\nE       #7 0x5614948fff83 <unknown>\nE       #8 0x5614948d001e <unknown>\nE       #9 0x5614948d0cfe <unknown>\nE       #10 0x561494dae9e1 <unknown>\nE       #11 0x561494db1bde <unknown>\nE       #12 0x561494db165b <unknown>\nE       #13 0x561494db2005 <unknown>\nE       #14 0x561494da03f2 <unknown>\nE       #15 0x561494db238d <unknown>\nE       #16 0x561494d8a5b5 <unknown>\nE       #17 0x561494dca008 <unknown>\nE       #18 0x561494dca21f <unknown>\nE       #19 0x561494dd853c <unknown>\nE       #20 0x7f778789ca94 <unknown>\nE       #21 0x7f7787929c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","steps":[{"name":"C58414: Initially next is visible and previous is not","time":{"start":1734074769223,"stop":1734074780230,"duration":11007},"status":"failed","statusMessage":"AssertionError: assert (False)\n +  where False = <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>>()\n +    where <bound method AboutPage.is_next_slide_button_visible of <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>> = <Pages.AboutPage.AboutPage object at 0x7fccb7202ed0>.is_next_slide_button_visible\n","statusTrace":"  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Tests/test_Sites.py\", line 518, in test_21\n    assert about_obj.is_next_slide_button_visible() and not about_obj.is_previous_slide_button_visible()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"C58414: Carousel position is at the start","time":{"start":1734074780232,"stop":1734074790249,"duration":10017},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='slide-container']\"}\n  (Session info: MicrosoftEdge=131.0.2903.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x561494dd994e <unknown>\n#1 0x56149488eb76 <unknown>\n#2 0x5614948dc45e <unknown>\n#3 0x5614948dc731 <unknown>\n#4 0x5614949204f4 <unknown>\n#5 0x56149490020d <unknown>\n#6 0x56149491e18a <unknown>\n#7 0x5614948fff83 <unknown>\n#8 0x5614948d001e <unknown>\n#9 0x5614948d0cfe <unknown>\n#10 0x561494dae9e1 <unknown>\n#11 0x561494db1bde <unknown>\n#12 0x561494db165b <unknown>\n#13 0x561494db2005 <unknown>\n#14 0x561494da03f2 <unknown>\n#15 0x561494db238d <unknown>\n#16 0x561494d8a5b5 <unknown>\n#17 0x561494dca008 <unknown>\n#18 0x561494dca21f <unknown>\n#19 0x561494dd853c <unknown>\n#20 0x7f778789ca94 <unknown>\n#21 0x7f7787929c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Tests/test_Sites.py\", line 520, in test_21\n    assert about_obj.get_image_carousel_position() == \"start\"\n  File \"/home/runner/work/QUBA_WEB/QUBA_WEB/Pages/AboutPage.py\", line 140, in get_image_carousel_position\n    carousel = self.driver.find_element(*self.image_carousel)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1734075532757,"stop":1734075532859,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Individual Sites"},{"name":"severity","value":"minor"},{"name":"tag","value":"flaky(reruns=3, reruns_delay=1)"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_Sites"},{"name":"subSuite","value":"TestSites"},{"name":"host","value":"fv-az805-100"},{"name":"thread","value":"1982-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_Sites"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'edge'"}],"links":[{"name":"C58414","url":"https://hedgehoglabqa.testrail.io/index.php?/cases/view/58414","type":"tms"},{"name":"Epic QP-356","url":"https://hedgehog-lab.atlassian.net/browse/QP-356","type":"issue"},{"name":"Story QP-264","url":"https://hedgehog-lab.atlassian.net/browse/QP-264","type":"issue"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["flaky(reruns=3, reruns_delay=1)"]},"source":"5dc1ce49f66a6f90.json","parameterValues":["'edge'"]}
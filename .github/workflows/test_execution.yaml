name: Run Selenium Tests and publish report

on:
  workflow_dispatch:
    inputs:
      chrome:
        description: 'Include Chrome'
        required: false
        default: true
        type: boolean
      firefox:
        description: 'Include Firefox'
        required: false
        default: false
        type: boolean
      safari:
        description: 'Include Safari'
        required: false
        default: false
        type: boolean
      edge:
        description: 'Include Edge'
        required: false
        default: false
        type: boolean

      test_options:
        description: 'Select test options'
        required: true
        default: 'All'
        type: choice
        options:
          - 'All'
          - 'Home Page'
          - 'Login'
          - 'Sites Page'
          - 'Contact Page'

jobs:
  tests:
    name: Run tests
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        include:
          - browser: chrome
            os: ubuntu-latest
            run_if_selected: ${{ github.event.inputs.chrome == 'true' }}
          - browser: firefox
            os: ubuntu-latest
            run_if_selected: ${{ github.event.inputs.firefox == 'true' }}
          - browser: edge
            os: ubuntu-latest
            run_if_selected: ${{ github.event.inputs.edge == 'true' }}
          - browser: safari
            os: macos-latest
            run_if_selected: ${{ github.event.inputs.safari == 'true' }}


    runs-on: ${{ matrix.os }}
    steps:
      
      - name: Set browser variable
        run: echo "BROWSERS=${{ matrix.browser }}" >> "$GITHUB_ENV"
        
      - name: Checkout test repository
        uses: actions/checkout@v4
        with:
          repository: Simeon-Zografov/test-repo

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install allure
        run: |
          npm install -g allure-commandline

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
        working-directory: .

      - name: Run Selenium tests
        continue-on-error: true
        env:
          URL: ${{ vars.URL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          BROWSERS: ${{ env.BROWSERS }}
          EMAIL: ${{ vars.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          APIURL: ${{ vars.APIURL }}
          KCURL: ${{ vars.KCURL }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

        run: |
          mkdir -p allure-results
          if [ "${{ github.event.inputs.test_options }}" != 'All' ]; then
            if [ "${{ github.event.inputs.test_options }}" == 'Home Page' ]; then
              pytest Tests/test_HomePage.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Login' ]; then
              pytest Tests/test_Login.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Sites Page' ]; then
              pytest Tests/test_Sites.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Contact Page' ]; then
              pytest Tests/test_ContactPage.py
            else
              echo "Invalid option"
            fi
          else
            pytest
          fi
        working-directory: .

      - name: Commit and push individual report to gh-pages
        if: always()
        continue-on-error: true
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b gh-pages || git checkout gh-pages
          git pull origin gh-pages  # Pull latest changes to avoid overwriting
          mkdir -p results-${{ matrix.browser }}
          cp -r allure-results/* results-${{ matrix.browser }}/
          git add results-${{ matrix.browser }}
          git commit -m "Add report for ${{ matrix.browser }}"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  aggregate:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Merge individual reports
        run: |
          mkdir -p allure-results
          for browser_dir in results-*; do
            cp -r "$browser_dir"/* allure-results/
          done

      - name: Copy previous history data
        run: |
          if [ -d allure-report/history ]; then
            mkdir -p allure-results/history
            cp -r allure-report/history/* allure-results/history/
          fi

      - name: Generate consolidated Allure report
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Clean up temporary directories
        run: |
          rm -rf allure-results
          rm -rf results-*

      - name: Commit and push consolidated report to gh-pages
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add allure-report
          git commit -m "Update consolidated Allure report for GitHub Pages"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report